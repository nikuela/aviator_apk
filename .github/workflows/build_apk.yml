name: Build APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y zip unzip openjdk-17-jdk git libz-dev libffi-dev

    - name: Set up Android SDK
      run: |
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
        export JAVA_TOOL_OPTIONS="-Dcom.sun.net.ssl.checkRevocation=false"

        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
        cd $ANDROID_SDK_ROOT/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O tools.zip
        unzip tools.zip
        mv cmdline-tools latest

        yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
        yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --channel=0 --verbose \
          "platform-tools" \
          "platforms;android-33" \
          "build-tools;33.0.2" \
          "ndk;25.2.9519653"

    - name: Install Buildozer
      run: |
        pip install --upgrade pip
        pip install cython
        pip install buildozer

    - name: Set environment variables
      run: |
        echo "ANDROIDSDK=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROIDNDK=$HOME/android-sdk/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "ANDROIDAPI=33" >> $GITHUB_ENV
        echo "ANDROIDMINAPI=21" >> $GITHUB_ENV
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
        echo "$HOME/android-sdk/build-tools/33.0.2" >> $GITHUB_PATH

    - name: Build APK
      run: buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: AviatorPredictor
        path: bin/*.apk

