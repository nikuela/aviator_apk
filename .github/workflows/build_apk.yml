name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v4

      - name: Instalar dependencias del sistema
        run: |
          sudo apt update
          sudo apt install -y unzip openjdk-17-jdk python3-pip zip libfreetype6-dev pkg-config libffi-dev libssl-dev
          pip install --upgrade pip
          pip install buildozer

      - name: Configurar entorno Android
        run: |
          mkdir -p $HOME/android-sdk
          echo "ANDROIDSDK=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/android-ndk" >> $GITHUB_ENV
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV

      - name: Instalar SDK Command-line Tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          curl -s https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o cmdline-tools.zip
          unzip cmdline-tools.zip
          mv cmdline-tools latest

      - name: Fix sdkmanager path (buildozer espera otra ruta)
        run: |
          mkdir -p $HOME/android-sdk/tools/bin
          ln -s $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager $HOME/android-sdk/tools/bin/sdkmanager

      - name: Aceptar licencias
        run: yes | sdkmanager --licenses || true

      - name: Instalar componentes necesarios con sdkmanager
        run: |
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"

      - name: Compilar APK
        run: |
          buildozer android debug

      - name: Subir APK generado
        uses: actions/upload-artifact@v4
        with:
          name: AviatorPredictor-APK
          path: bin/*.apk
