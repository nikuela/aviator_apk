name: Build Android APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-22.04
    
    steps:
    - name: 🚀 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: ☕ Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: 📦 Cache Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('**/requirements.txt', '**/buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
          
    - name: 🔧 Install System Dependencies
      run: |
        sudo apt update -qq
        sudo apt install -y --no-install-recommends \
          git \
          zip \
          unzip \
          openjdk-17-jdk \
          python3-pip \
          python3-setuptools \
          python3-dev \
          python3-distutils \
          build-essential \
          autoconf \
          automake \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5 \
          libncurses5-dev \
          libstdc++6 \
          libffi-dev \
          libssl-dev \
          libsqlite3-dev \
          libjpeg-dev \
          libpng-dev \
          libfreetype6-dev \
          liblcms2-dev \
          libblas-dev \
          liblapack-dev \
          libatlas-base-dev \
          libgstreamer1.0-0 \
          libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev \
          libmtdev-dev \
          libgl1-mesa-dev \
          libgles2-mesa-dev \
          xclip \
          cmake \
          ninja-build \
          ccache

    - name: 🐍 Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade \
          buildozer \
          cython \
          kivy \
          kivymd \
          pillow \
          requests \
          pyjnius

    - name: ⚙️ Configure Environment Variables
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
        echo "ANDROIDAPI=34" >> $GITHUB_ENV
        echo "ANDROIDNDK=25c" >> $GITHUB_ENV
        echo "ANDROIDNDKVER=r25c" >> $GITHUB_ENV

    - name: 📋 Initialize Buildozer (if needed)
      run: |
        if [ ! -f "buildozer.spec" ]; then
          buildozer init
          # Configurar buildozer.spec automáticamente
          sed -i 's/title = My Application/title = Aviator APK/' buildozer.spec
          sed -i 's/package.name = myapp/package.name = aviator/' buildozer.spec
          sed -i 's/package.domain = org.example/package.domain = com.nikuela/' buildozer.spec
          sed -i 's/#android.permissions = /android.permissions = INTERNET,ACCESS_NETWORK_STATE,WRITE_EXTERNAL_STORAGE/' buildozer.spec
          sed -i 's/requirements = python3,kivy/requirements = python3,kivy,kivymd,pillow,requests/' buildozer.spec
        fi

    - name: 📱 Create main.py (if not exists)
      run: |
        if [ ! -f "main.py" ]; then
          cat > main.py << 'EOF'
        from kivy.app import App
        from kivy.uix.label import Label
        from kivy.uix.boxlayout import BoxLayout
        from kivy.uix.button import Button
        
        class AviatorApp(App):
            def build(self):
                layout = BoxLayout(orientation='vertical', padding=20, spacing=20)
                
                title = Label(
                    text='🚀 AVIATOR APK',
                    font_size='24sp',
                    size_hint_y=None,
                    height='80dp'
                )
                
                subtitle = Label(
                    text='Aplicación creada con GitHub Actions',
                    font_size='16sp',
                    size_hint_y=None,
                    height='60dp'
                )
                
                button = Button(
                    text='¡Funciona perfectamente!',
                    size_hint_y=None,
                    height='60dp'
                )
                
                layout.add_widget(title)
                layout.add_widget(subtitle)
                layout.add_widget(button)
                
                return layout
        
        if __name__ == '__main__':
            AviatorApp().run()
        EOF
        fi

    - name: 🔨 Build APK Debug
      run: |
        buildozer android debug
        
    - name: 🔍 List Generated Files
      run: |
        echo "📁 Archivos generados:"
        find . -name "*.apk" -type f -exec ls -la {} \;
        
    - name: 📦 Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: aviator-apk-debug
        path: bin/*.apk
        retention-days: 30

    - name: 🎯 Create Release (on main branch)
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Aviator APK v${{ github.run_number }}
        body: |
          🚀 **Aviator APK Build #${{ github.run_number }}**
          
          ✅ Build exitoso con GitHub Actions
          📱 APK generado automáticamente
          🔧 Compilado con Buildozer + Kivy
          
          **Características:**
          - Python 3.9 + Kivy
          - Android API 34
          - NDK r25c
          - Optimizado para rendimiento
          
          **Instalación:**
          1. Descarga el APK
          2. Habilita "Fuentes desconocidas" en Android
          3. Instala la aplicación
          
          ---
          *Generado automáticamente el ${{ github.event.head_commit.timestamp }}*
        files: bin/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: ✅ Build Summary
      run: |
        echo "🎉 ¡BUILD COMPLETADO EXITOSAMENTE!"
        echo ""
        echo "📊 Resumen del Build:"
        echo "          - Python: $(python3 --version)"
        echo "- Java: $(java -version 2>&1 | head -n 1)"
        echo "- Buildozer: $(buildozer version)"
        echo "- Commit: ${{ github.sha }}"
        echo "- Branch: ${{ github.ref_name }}"
        echo ""
        echo "📦 Artefactos generados:"
        find bin/ -name "*.apk" -exec basename {} \; 2>/dev/null || echo "No APK files found in bin/"
        echo ""
        echo "🔗 Descarga tu APK desde la sección 'Actions' de este repositorio"
